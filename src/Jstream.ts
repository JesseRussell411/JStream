//                   ,▄▄██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▓▄╖
//                ,▄███████▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀███████▄
//              ╓██████▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒░▒▄▄▄▄▒▒▒▒▒▄▄▄▄▄▒▒▒▒▄▄▄▄▄▒▒▒▒▄▄▄▄▄▒▒▒▒▄▄▄▄▄▒▒▒▒▄▄▄▄▄░▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▒▒▒▒▒▄▄▄▄▄▒▀████▄
//             ▄███▓▒▒▀▀███▓▄▄░▀▀███▓▄▄▒░▀███▓▄▄▒░▀████▄▄▒░▀████▄▄▒░▀▀███▄▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒▒▀▀███▓▄▒▒▀▀███▓▄▒░▀▀███▓▄▄▒▀▀███▓▄▄▒░▀████▄▄▒░▀████▄▄▒░▀▀███▓████▄
//            ████░▀███▓▄▄▒▒▀████▄▄▒▒▀▀███▄▄▒▒▀▀███▄▄▒░▀▀███▄▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒▒▀▀███▓▄▒▒▀▀███▓▄▄▒▀▀███▓▄▄▒▒▀███▓▄▄▒▒▀████▄▄▒▒▀▀███▄▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▒▀███▌
//           ▐███░▒▒▒▒░░▀▀▀▀╨▒▒░░▀▀▀▀▀▒▒░░▀▀▀▀▀▒▒░░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▒░▒▀▀▀▀╣▒▒░▒▀▀▀▀╨▒▒░▒▀▀▀▀╬▒▒░░▀▀▀▀╨▒▒░░▀▀▀▀╨▒▒░░▀▀▀▀▀▒░░░▀▀▀▀▀▒▒░░▀▀▀▀▀▒▒▒░▀▀▀▀▀▒▒▐███U
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▄▄░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒███▌
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▓███████▄▒▒▒▒▒▒▒▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▄██████░▒▒░░░▒▒░███▀░▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▄▄▄▄▄▄▒▒▒▒▒▒▄▄▄▄▄▒▒▒░▒▒▒▒▄▄▄▄▄░▒▒▒▒▒▄▄▄▄▄▒▒▒▒▒▒▒▒▄▄▄▄▄▄▄▄▄▄▄▒▒▒▒▒▒▒▒▒▒▒▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▒▒▒▒▒▒▒▄▄▄▄▄▄▄▄▄▄▄▄▄▒▒▒▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒░▒▒▒▒▒▒▒▒███████▒▒▒▒▒▒▒░▒███▄▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒░▒▒██████▒▒▒▒▒▐█████▒▒░▒▒░▒▓██████▒▒▒▒░█████▌▒▒▒▒▒▒▐█████████████▓░▒▒▒▒▒▒░███████████████▒▒▒▒▒░▐███████████████░▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒██████▓▀████▄▒░░▒▒▄█████▄██▓░▒▒▒▒▒▒▒▒▒░▒▒██████▒▒▒▒▒▐█████▒▒░▒▒░▒▓███████▓▒▒▒█████▌▒▒▒▒▒▒▐█████▀▀▀▀██████▒▒▒▒▒▒░██████░░░░░░░░░▒▒▒▒▒░▐█████▌▒░░▒█████▌░▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒░░▒▒▒▒░▀███▒▒▒▒░▀███▄▒▓██████▀▀▀░▒▒▒▒▒▒▒▒▒▒▒░▒▒██████▒▒▒▒▒▐█████▒▒░▒▒░▒▓█████████▒░█████▌▒▒▒▒▒▒▐█████░░░▒░█████▓▒▒▒▒▒░██████▄▓▓▓▓▓▓▄▒▒▒▒▒▒░▐█████▌▄▄▄▄█████▌▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒░░░▒▒▒▒░▒░▀███████▀░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▒▒░▒▒▐█████▒▒░▒▒░▒▓████▓█████▌█████▌▒▒▒▒▒▒▐█████▒▒░▒▒██████▒░▒▒▒░██████████████▒░▒▒▒▒░▐█████████████▀▒▒▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒██████▓░▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█████▒▒▒▒▒▐█████▒▒▒▒▒░▒▓████▌▒▀█████████▌▒▒▒▒▒▒▐█████▒▒▒▒▒█████▓▒▒▒▒▒░██████▒░░░░░░░▒▒▒▒▒▒░▐█████▌▀██████▌▒▒▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▄▄▄██████▀███▓▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▐██████▄▄▄▄██████▒░▒▒▒░▒▓████▌▒▒░████████▌▒▒▒▒▒▒▐█████▄▄▄▄██████▒▒▒▒▒▒░██████▄▄▄▄▄▄▄▄▄░▒▒▒▒░▐█████▌▒▒▀██████░▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒╫█████████░▒▒▒░████▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█████████████▀░▒▒▒▒▒▒░▓████▓▒▒░▒▀██████▌▒▒▒▒▒▒▐█████████████▀░▒▒▒▒▒▒▒███████████████▒▒▒▒▒▒▐█████▌▒▒▒▒██████░▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒░▒▒█▀░▒░▀██▓▒▒▒▒▒▒▒░▀█▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▀▀▀▀▀▀▀▀▀░▒▒▒▒▒▒▒▒▒▒▒▀▀▀▀▀▒░░▒▒░▀▀▀▀▀▒▒▒▒▒▒▒░▀▀▀▀▀▀▀▀▀▀▀░▒▒▒▒▒▒▒▒▒▒▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▒▒▒▒▒▒░▀▀▀▀▀▒▒▒▒▒░▀▀▀▀▀▀▒▒▒▒▒▒▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▓██▒▒▒▒▒▒▒▒▒░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒╨▀▀▒░▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒░▒▓██▓
//           ███▌▒░▒▒▒▒▒▄▄▓▓▓▓▄▒▒▒▒░▒▒▄▄▓▓▓▓▄▒▒░▒▒▒▄▄▄▄▒▒▒▒▄▄▄▄▒▒▒▒▄▓▓▓▓▓▄▒▒▒▄▄▓▓▄▄▄▄▄▄▄▄▒▒▄▄▄▄▄▓▓▄▄▄▒▒▒▒▄▓▄▒▒▒▒▒▄▄▄▄▒░░▒▒▄▄▓▓▓▄▄▒▒▒╫▄▄▄▄▄▄▄▄▄▄▄▒▒▄▄▄▓░░░▒▒▒▄▓▓▓▓▄▄▒▒▒▒▒▄▄▓▄░▒▒▒╫▄▓▓▒▒▒▒░▒▓██▓
//           ███▌░░▒▒▒▓██████████▒▒▒▓██████████▄▒▒▓████▓▒▒▒████▒▒▓███▀▀████▌▒████████████▌▒███████████▌▒▐███▌▒▒▒▒████▒▒▒██████████▓▒▓███████████▌▒████▒▒▒▄██████████▓▒▒▒█████▒▒▒▓███▒▒▒▒░▒▓██▓
//           ███▌▒░▒▒╫███▓░▒▒░▀▀▀░▒▓███▌▒▒▒░████▒▒▓██████▄▒████▒▒█████▓▓▓▒▒░▒▒▒▒▒████▒▒▒▒▒▒████▒▒▒▓███▌▒▐███▌▒▒▒▒████▒▒████▒▒▒▒▒▀▀░▒▒▒▒▒▓███▌▒▒░▒░████▒▒▐████░▒▒░▓███▓▒▒██████▓▒▓███░▒▒▒░▒▓██▓
//           ███▌▒░░▒████▌▒▒▒▒▒▒▒▒▒████▒▒▒▒▒▓███▌▒▓███▀████████▒▒░▀▀███████▓▒▒░▒░████▒▒▒▒▒▒██████████▒▒▒▐███▌░░▒▒████▒▒████▒▒░▒▒▒▒▒▒▒▒▒▒▓███▌▒▒░▒░████▒▒╫███▌▒▒▒▒▐████▒▒███▓████████░▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▐████▒▒▒▄███▌▒▓███▓▒▒▒▄████░▒▓███▒░▓██████▒╫███▌▒▒░████▒▒▒▒░████▒▒▒▒▒▒████▒░████▓▒▒▐████▒▒▒▓███▓▒░████▌▒▒▒▓███▒▒▒▒▒▓███▌▒▒░▒░████▒▒▒████▄▒▒▒████▌▒▒███▓▒▀██████░▒▒▒░▒▓██▓
//           ███▌▒▒▒▒▒▒█████████▀▒▒▒▀██████████░▒▒▓███▒▒▒▒█████▒▒▀█████████▀▒▒▒▒▒████▒▒▒▒▒▒████▒▒░█████▒▒▀█████████▓░▒▒▒▀█████████▀▒▒▒▒▒▓███▌▒▒░▒▒████▒▒▒░██████████▀▒▒▒███▓▒▒░█████▒▒▒▒▒▒▓██▓
//           ███▌▒░▒▒▒▒▒░░▀▀▀░░░▒▒▒▒▒░░░▀▀▀▀░▒▒▒▒▒░░░░░▒▒▒░░░░░▒▒▒░░░▀▀▀░░▒▒▒▒▒▒▒░░░░░▒▒▒▒▒░░░░▒▒▒▒░░░░░▒▒▒░░▀▀▀▀▒░▒▒▒▒▒▒▒░░▀▀▀░░▒▒▒▒░░▒░░░░░▒▒▒░░░░░░░▒▒▒▒░░▀▀▀▀░░▒▒▒▒░░░░░▒▒▒▒░░░░▒▒▒▒▒▒███▌
//           ▓███▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒███▌
//            ███▓▒░▀▀███▓▄▒░▀▀███▓▄▒▒▀▀███▓▄▒▒▀▀███▓▄▄▒▒▀███▓▄▄▒▒▀███▓▄▄▒░▀████▄▄▒▒▀▀███▄▄▒░▀▀███▓▄▒▒▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒▒▀▀███▓▄▒▒▀▀███▓▄▒▒▀▀███▓▄▄▒▒▀███▓▄▄▒▒▒███▓
//             ████▒█▓▄▒▒▀▀███▓▄▄▒▒▀████▄▄▒▒▀████▄▄▒▒▀████▄▄▒▒▀▀███▄▄▒▒▀▀███▄▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒▒▀▀███▓▄▄▒▀▀███▓▄▄▒▀▀████▄▄▒▒▀████▄▄▒▒▀████▄▄▒░▀▀▓▄███▀
//              ▀████▓▀███▓▄▄▒░▀███▓▄▄▒░▀▀██▓▄▄▒░▀▀███▄▄▒░▀▀███▄▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░▀▀███▓▄▒░░▀███▓▄▒▒░▀███▓▄▄░░▀███▓▄▄▒░▀▀██▓▄▄▒░▀▀███▄▄▒░▀▀██▓▄████╜
//                ▀██████▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▓██████╙
//                   ▀▀█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▀"

import { BreakSignal } from "./types/symbols";
import { breakSignal } from "./utils/symbols";

export type JstreamProperties<_> = Readonly<
    Partial<{
        freshSource: boolean;
    }>
>;

export default class Jstream<T> implements Iterable<T> {
    private readonly getSource: () => Iterable<T>;
    private readonly properties: JstreamProperties<T>;

    public constructor(
        getSource: () => Iterable<T>,
        properties: JstreamProperties<T> = {}
    ) {
        this.getSource = getSource;
        this.properties = properties;
    }

    public [Symbol.iterator]() {
        return this.getSource()[Symbol.iterator]();
    }

    public static from<T>(
        source: Iterable<T> | (() => Iterable<T>)
    ): Jstream<T> {
        if (source instanceof Function) {
            return new Jstream(source);
        } else {
            return new Jstream(() => source);
        }
    }

    public static of<T>(...items: T[]): Jstream<T> {
        return new Jstream(() => items);
    }

    public forEach(
        action: (item: T, index: number) => void | BreakSignal
    ): void {
        let i = 0;
        for (const item of this) {
            const signal = action(item, i);
            if (signal === breakSignal) break;
            i++;
        }
    }

    public map<R>(mapping: (item: T, index: number) => R): Jstream<R> {
        const self = this;

        return new Jstream(function* () {
            let i = 0;
            for (const item of self) {
                yield mapping(item, i);
                i++;
            }
        });
    }

    public filter<R extends T = T>(
        predicate: (item: T, index: number) => boolean
    ): Jstream<R> {
        const self = this;

        return new Jstream(function* () {
            let i = 0;
            for (const item of self) {
                if (predicate(item, i)) yield item as R;
                i++;
            }
        });
    }

    public toArray(): T[] {
        const source = this.getSource();
        if (this.properties.freshSource && Array.isArray(source)) {
            return source;
        } else {
            return [...source];
        }
    }

    public asArray(): readonly T[] {
        const source = this.getSource();
        if (Array.isArray(source)) {
            return source;
        } else {
            return [...source];
        }
    }

    public toSet(): Set<T> {
        const source = this.getSource();
        if (this.properties.freshSource && source instanceof Set) {
            return source;
        } else {
            return new Set(source);
        }
    }

    public asSet(): ReadonlySet<T> {
        const source = this.getSource();
        if (source instanceof Set) {
            return source;
        } else {
            return new Set(source);
        }
    }
}
